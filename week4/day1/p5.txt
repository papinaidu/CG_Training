abstract class JobRole {
   protected String candidateName;

   public JobRole(String candidateName) {
       this.candidateName = candidateName;
   }

   public abstract String getRequiredSkills();
   public abstract String getRoleName();

   public String getCandidateName() {
       return candidateName;
   }
}

class SoftwareEngineer extends JobRole {
   public SoftwareEngineer(String candidateName) {
       super(candidateName);
   }

   public String getRequiredSkills() {
       return "Java, Data Structures, System Design";
   }

   public String getRoleName() {
       return "Software Engineer";
   }
}

class DataScientist extends JobRole {
   public DataScientist(String candidateName) {
       super(candidateName);
   }

   public String getRequiredSkills() {
       return "Python, Machine Learning, Statistics";
   }

   public String getRoleName() {
       return "Data Scientist";
   }
}

class ProductManager extends JobRole {
   public ProductManager(String candidateName) {
       super(candidateName);
   }

   public String getRequiredSkills() {
       return "Communication, Strategy, Agile";
   }

   public String getRoleName() {
       return "Product Manager";
   }
}

class Resume<T extends JobRole> {
   private T jobRole;

   public Resume(T jobRole) {
       this.jobRole = jobRole;
   }

   public void processResume() {
       System.out.println("Processing resume of " + jobRole.getCandidateName());
       System.out.println("Role Applied: " + jobRole.getRoleName());
       System.out.println("Required Skills: " + jobRole.getRequiredSkills());
   }

   public T getJobRole() {
       return jobRole;
   }
}


class ResumeScreeningSystem {
   public static void screenCandidates(List<? extends JobRole> candidates) {
       for (JobRole role : candidates) {
           System.out.println("Screening: " + role.getCandidateName() + " for " + role.getRoleName());
           System.out.println("Skills Required: " + role.getRequiredSkills());
           System.out.println();
       }
   }
}



public class Main {
   public static void main(String[] args) {
       Resume<SoftwareEngineer> r1 = new Resume<>(new SoftwareEngineer("Alice"));
       Resume<DataScientist> r2 = new Resume<>(new DataScientist("Bob"));
       Resume<ProductManager> r3 = new Resume<>(new ProductManager("Charlie"));

       r1.processResume();
       r2.processResume();
       r3.processResume();

       System.out.println("\n--- Screening Multiple Resumes ---\n");

       List<JobRole> jobRoles = new ArrayList<>();
       jobRoles.add(new SoftwareEngineer("Alice"));
       jobRoles.add(new DataScientist("Bob"));
       jobRoles.add(new ProductManager("Charlie"));

       ResumeScreeningSystem.screenCandidates(jobRoles);
   }
}